diff --git a/MIGRATION_STAKEHOLDERS.md b/MIGRATION_STAKEHOLDERS.md
new file mode 100644
index 0000000..709002a
--- /dev/null
+++ b/MIGRATION_STAKEHOLDERS.md
@@ -0,0 +1,154 @@
+# üîÑ Migration: Adicionar Sistema de Stakeholders
+
+## üìã Resumo
+
+Esta migration adiciona suporte para **dois tipos de radar** no sistema:
+- **Parlamento** (existente)
+- **Stakeholders** (novo)
+
+---
+
+## üóÑÔ∏è Altera√ß√µes na Base de Dados
+
+### 1. Adicionar coluna `tipo_radar` √† tabela `documents`
+
+Execute este SQL no Supabase:
+
+```sql
+-- Adicionar coluna tipo_radar
+ALTER TABLE documents
+ADD COLUMN IF NOT EXISTS tipo_radar VARCHAR(50) DEFAULT 'parlamento';
+
+-- Criar index para melhor performance
+CREATE INDEX IF NOT EXISTS idx_documents_tipo_radar
+ON documents(tipo_radar);
+
+-- Atualizar documentos existentes (garantir que s√£o 'parlamento')
+UPDATE documents
+SET tipo_radar = 'parlamento'
+WHERE tipo_radar IS NULL;
+```
+
+### 2. Verificar estrutura da tabela
+
+Depois de executar a migration, a tabela `documents` deve ter:
+
+```sql
+SELECT column_name, data_type, column_default
+FROM information_schema.columns
+WHERE table_name = 'documents'
+ORDER BY ordinal_position;
+```
+
+Deve aparecer:
+- `tipo_radar` | `character varying` | `'parlamento'::character varying`
+
+---
+
+## üîß Valores V√°lidos
+
+### `tipo_radar`
+- `parlamento` - Documentos do Parlamento Portugu√™s
+- `stakeholders` - Documentos de entidades externas (sindicatos, entidades p√∫blicas, etc.)
+
+### `categoria` (para stakeholders)
+- `stake_concertacao` - Concerta√ß√£o Social (CGTP, UGT, CAP, CCP, CTP)
+- `stake_laboral` - Laboral (ACT, CITE, AIMA)
+- `stake_ambiente` - Ambiente (APA, IGAMAOT, DGEG, DGAV, ADENE, ERSE)
+- `stake_agricultura` - Agricultura (DGADR, INIAV)
+- `stake_economia` - Economia/Finan√ßas (IAPMEI, AdC, AT, Banco Portugal, etc.)
+- `stake_saude` - Sa√∫de (INFARMED, ERS, IGAS)
+- `stake_habitacao` - Imobili√°rio/Habita√ß√£o (CMVM, DGT, IHRU)
+
+---
+
+## üß™ Testar Migration
+
+### 1. Verificar que coluna existe
+
+```sql
+SELECT COUNT(*)
+FROM information_schema.columns
+WHERE table_name = 'documents'
+  AND column_name = 'tipo_radar';
+```
+
+Deve retornar: `1`
+
+### 2. Inserir documento de teste (stakeholder)
+
+```sql
+INSERT INTO documents (
+  titulo,
+  categoria,
+  tipo_conteudo,
+  tipo_radar,
+  fonte,
+  url,
+  data_publicacao
+) VALUES (
+  'Teste Stakeholder - UGT',
+  'stake_concertacao',
+  'noticia',
+  'stakeholders',
+  'ugt',
+  'https://www.ugt.pt/test',
+  CURRENT_TIMESTAMP
+);
+```
+
+### 3. Consultar por tipo_radar
+
+```sql
+-- Documentos do Parlamento
+SELECT COUNT(*) FROM documents WHERE tipo_radar = 'parlamento';
+
+-- Documentos de Stakeholders
+SELECT COUNT(*) FROM documents WHERE tipo_radar = 'stakeholders';
+```
+
+---
+
+## üöÄ Ap√≥s Migration
+
+1. **Executar scraper de stakeholders:**
+   ```bash
+   npm run scrape stakeholders
+   ```
+
+2. **Verificar endpoints API:**
+   - `GET /api/stakeholders/documents` - Listar documentos stakeholders
+   - `GET /api/stakeholders/stats` - Estat√≠sticas stakeholders
+   - `GET /api/stakeholders/search?q=termo` - Pesquisar stakeholders
+
+3. **Testar no frontend:**
+   - Clicar no toggle de ambiente no header
+   - Deve alternar entre Parlamento ‚Üî Stakeholders
+   - Cada ambiente mostra dados diferentes
+
+---
+
+## ‚ö†Ô∏è Importante
+
+- **N√£o eliminar dados existentes!** Todos os documentos do parlamento ficam com `tipo_radar = 'parlamento'`
+- **Compatibilidade:** C√≥digo antigo continua a funcionar normalmente
+- **Rollback:** Se necess√°rio, basta fazer `DROP COLUMN tipo_radar` (mas perdes dados de stakeholders)
+
+---
+
+## üìä Estrutura Final
+
+```
+documents
+‚îú‚îÄ‚îÄ id (PK)
+‚îú‚îÄ‚îÄ titulo
+‚îú‚îÄ‚îÄ categoria (stake_* ou comissao_*)
+‚îú‚îÄ‚îÄ tipo_conteudo
+‚îú‚îÄ‚îÄ tipo_radar (parlamento | stakeholders) ‚Üê NOVO
+‚îú‚îÄ‚îÄ fonte
+‚îú‚îÄ‚îÄ url
+‚îú‚îÄ‚îÄ resumo
+‚îú‚îÄ‚îÄ data_publicacao
+‚îú‚îÄ‚îÄ created_at
+‚îî‚îÄ‚îÄ ...
+```
diff --git a/src/controllers/stakeholderController.js b/src/controllers/stakeholderController.js
new file mode 100644
index 0000000..e16392e
--- /dev/null
+++ b/src/controllers/stakeholderController.js
@@ -0,0 +1,122 @@
+import Document from '../models/Document.js';
+
+// Obter documentos de stakeholders
+export const getStakeholderDocuments = async (req, res) => {
+  try {
+    const { categoria, fonte, limit = 500 } = req.query;
+
+    const filtro = {
+      tipo_radar: 'stakeholders' // ‚Üê FILTRO PRINCIPAL
+    };
+
+    if (categoria) filtro.categoria = categoria;
+    if (fonte) filtro.fonte = fonte;
+    if (limit) filtro.limit = parseInt(limit);
+
+    const documentos = await Document.find(filtro);
+
+    res.json({
+      success: true,
+      count: documentos.length,
+      data: documentos
+    });
+
+  } catch (error) {
+    console.error('Erro ao buscar documentos stakeholders:', error);
+    res.status(500).json({
+      success: false,
+      error: error.message
+    });
+  }
+};
+
+// Estat√≠sticas de stakeholders
+export const getStakeholderStats = async (req, res) => {
+  try {
+    // Buscar todos stakeholders
+    const todos = await Document.find({
+      tipo_radar: 'stakeholders',
+      limit: 10000
+    });
+
+    // Agrupar por categoria
+    const porCategoria = todos.reduce((acc, doc) => {
+      const cat = doc.categoria || 'outros';
+      if (!acc[cat]) {
+        acc[cat] = { _id: cat, total: 0 };
+      }
+      acc[cat].total++;
+      return acc;
+    }, {});
+
+    const porCategoriaArray = Object.values(porCategoria);
+
+    // Total geral
+    const totalGeral = todos.length;
+
+    // Documentos de hoje (√∫ltimas 24h)
+    const ontem = new Date();
+    ontem.setDate(ontem.getDate() - 1);
+
+    const documentosHoje = todos.filter(doc =>
+      new Date(doc.created_at) >= ontem
+    ).length;
+
+    res.json({
+      success: true,
+      data: {
+        porCategoria: porCategoriaArray,
+        totalGeral,
+        documentosHoje,
+        ultimaAtualizacao: new Date()
+      }
+    });
+
+  } catch (error) {
+    console.error('‚ùå Erro ao buscar stats stakeholders:', error);
+    res.status(500).json({
+      success: false,
+      error: error.message
+    });
+  }
+};
+
+// Pesquisar documentos de stakeholders
+export const searchStakeholderDocuments = async (req, res) => {
+  try {
+    const { q } = req.query;
+
+    if (!q) {
+      return res.status(400).json({
+        success: false,
+        error: 'Par√¢metro de pesquisa (q) obrigat√≥rio'
+      });
+    }
+
+    // Buscar todos stakeholders
+    const todos = await Document.find({
+      tipo_radar: 'stakeholders',
+      limit: 1000
+    });
+
+    // Filtrar por query
+    const documentos = todos.filter(doc =>
+      doc.titulo.toLowerCase().includes(q.toLowerCase()) ||
+      (doc.resumo && doc.resumo.toLowerCase().includes(q.toLowerCase())) ||
+      (doc.fonte && doc.fonte.toLowerCase().includes(q.toLowerCase()))
+    );
+
+    res.json({
+      success: true,
+      count: documentos.length,
+      data: documentos.slice(0, 50) // ‚Üê Top 50 resultados
+    });
+
+  } catch (error) {
+    console.error('Erro ao pesquisar stakeholders:', error);
+    res.status(500).json({
+      success: false,
+      error: error.message
+    });
+  }
+};
diff --git a/src/models/Document.js b/src/models/Document.js
index 3daed03..5ab0461 100644
--- a/src/models/Document.js
+++ b/src/models/Document.js
@@ -8,6 +8,7 @@ export default {
         titulo: data.titulo,
         categoria: data.categoria,
         tipo_conteudo: data.tipo_conteudo || 'geral',
+        tipo_radar: data.tipo_radar || 'parlamento', // ‚Üê NOVO: parlamento ou stakeholders
         fonte: data.fonte,
         url: data.url,
         resumo: data.resumo || null,
@@ -44,6 +45,10 @@ export default {
   async find(filter = {}) {
     let query = supabase.from('documents').select('*');
 
+    if (filter.tipo_radar) {
+      query = query.eq('tipo_radar', filter.tipo_radar);
+    }
+
     if (filter.categoria) {
       query = query.eq('categoria', filter.categoria);
     }
diff --git a/src/routes/stakeholderRoutes.js b/src/routes/stakeholderRoutes.js
new file mode 100644
index 0000000..964a1c6
--- /dev/null
+++ b/src/routes/stakeholderRoutes.js
@@ -0,0 +1,10 @@
+import express from 'express';
+import * as stakeholderController from '../controllers/stakeholderController.js';
+
+const router = express.Router();
+
+router.get('/documents', stakeholderController.getStakeholderDocuments);
+router.get('/stats', stakeholderController.getStakeholderStats);
+router.get('/search', stakeholderController.searchStakeholderDocuments);
+
+export default router;
diff --git a/src/scrapers/stakeholders.js b/src/scrapers/stakeholders.js
index 3499bf8..436aa3c 100644
--- a/src/scrapers/stakeholders.js
+++ b/src/scrapers/stakeholders.js
@@ -10,35 +10,35 @@ const STAKEHOLDERS_CONFIG = {
   cgtp: {
     url: "https://www.cgtp.pt/accao-e-luta",
     nome: "CGTP",
-    categoria: "concertacao_social",
-    seletor: ".entry-title a", // Ajustar conforme HTML real
+    categoria: "stake_concertacao",
+    seletor: ".entry-title a",
     tipo_conteudo: "noticia"
   },
   ugt: {
     url: "https://www.ugt.pt/noticias",
     nome: "UGT",
-    categoria: "concertacao_social",
-    seletor: ".news-item h3 a",
+    categoria: "stake_concertacao",
+    seletor: ".col-4 a[href*='/noticias/artigo/']", // ‚Üê Seletor correto do HTML real
     tipo_conteudo: "noticia"
   },
   cap: {
     url: "https://www.cap.pt/noticias-cap",
     nome: "CAP",
-    categoria: "concertacao_social",
+    categoria: "stake_concertacao",
     seletor: ".noticia-titulo a",
     tipo_conteudo: "noticia"
   },
   ccp: {
     url: "https://ccp.pt/noticias/",
     nome: "CCP",
-    categoria: "concertacao_social",
+    categoria: "stake_concertacao",
     seletor: ".post-title a",
     tipo_conteudo: "noticia"
   },
   ctp: {
     url: "https://ctp.org.pt/noticias",
     nome: "CTP",
-    categoria: "concertacao_social",
+    categoria: "stake_concertacao",
     seletor: "article h2 a",
     tipo_conteudo: "noticia"
   },
@@ -47,21 +47,21 @@ const STAKEHOLDERS_CONFIG = {
   act: {
     url: "https://portal.act.gov.pt/Pages/TodasNoticias.aspx#1",
     nome: "ACT",
-    categoria: "laboral",
+    categoria: "stake_laboral",
     seletor: ".ms-vb a",
     tipo_conteudo: "noticia"
   },
   cite: {
     url: "https://cite.gov.pt/noticias-antigas",
     nome: "CITE",
-    categoria: "laboral",
+    categoria: "stake_laboral",
     seletor: ".entry-title a",
     tipo_conteudo: "noticia"
   },
   aima: {
     url: "https://aima.gov.pt/pt/noticias",
     nome: "AIMA",
-    categoria: "laboral",
+    categoria: "stake_laboral",
     seletor: ".news-item h3 a",
     tipo_conteudo: "noticia"
   },
@@ -70,42 +70,42 @@ const STAKEHOLDERS_CONFIG = {
   apambiente: {
     url: "https://apambiente.pt/destaques",
     nome: "APA",
-    categoria: "ambiente",
+    categoria: "stake_ambiente",
     seletor: ".destaque-titulo a",
     tipo_conteudo: "destaque"
   },
   igamaot: {
     url: "https://www.igamaot.gov.pt/pt/espaco-publico/destaques#1",
     nome: "IGAMAOT",
-    categoria: "ambiente",
+    categoria: "stake_ambiente",
     seletor: ".ms-vb a",
     tipo_conteudo: "destaque"
   },
   dgav: {
     url: "https://www.dgav.pt/destaques/noticias/",
     nome: "DGAV",
-    categoria: "ambiente",
+    categoria: "stake_ambiente",
     seletor: ".entry-title a",
     tipo_conteudo: "noticia"
   },
   dgeg: {
     url: "https://www.dgeg.gov.pt/pt/destaques/",
     nome: "DGEG",
-    categoria: "ambiente",
+    categoria: "stake_ambiente",
     seletor: ".news-item h3 a",
     tipo_conteudo: "destaque"
   },
   adene: {
     url: "https://www.adene.pt/comunicacao/noticias/",
     nome: "ADENE",
-    categoria: "ambiente",
+    categoria: "stake_ambiente",
     seletor: ".noticia a",
     tipo_conteudo: "noticia"
   },
   erse: {
     url: "https://www.erse.pt/comunicacao/destaques/",
     nome: "ERSE",
-    categoria: "ambiente",
+    categoria: "stake_ambiente",
     seletor: ".destaque h3 a",
     tipo_conteudo: "destaque"
   },
@@ -114,14 +114,14 @@ const STAKEHOLDERS_CONFIG = {
   dgadr: {
     url: "https://www.dgadr.gov.pt/pt/destaques",
     nome: "DGADR",
-    categoria: "agricultura",
+    categoria: "stake_agricultura",
     seletor: ".destaque-item a",
     tipo_conteudo: "destaque"
   },
   iniav: {
     url: "https://www.iniav.pt/divulgacao/noticias-iniav",
     nome: "INIAV",
-    categoria: "agricultura",
+    categoria: "stake_agricultura",
     seletor: ".news-title a",
     tipo_conteudo: "noticia"
   },
@@ -130,49 +130,49 @@ const STAKEHOLDERS_CONFIG = {
   iapmei: {
     url: "https://www.iapmei.pt/NOTICIAS.aspx",
     nome: "IAPMEI",
-    categoria: "economia_financas",
+    categoria: "stake_economia",
     seletor: ".noticia-link",
     tipo_conteudo: "noticia"
   },
   concorrencia: {
     url: "https://www.concorrencia.pt/pt/noticias-comunicados-e-intervencoes",
     nome: "AdC",
-    categoria: "economia_financas",
+    categoria: "stake_economia",
     seletor: ".views-row h3 a",
     tipo_conteudo: "comunicado"
   },
   aduaneiro: {
     url: "https://info-aduaneiro.portaldasfinancas.gov.pt/pt/noticias/Pages/noticias.aspx",
     nome: "AT Aduaneiro",
-    categoria: "economia_financas",
+    categoria: "stake_economia",
     seletor: ".ms-vb a",
     tipo_conteudo: "noticia"
   },
   bportugal: {
     url: "https://www.bportugal.pt/comunicados/media/banco-de-portugal",
     nome: "Banco de Portugal",
-    categoria: "economia_financas",
+    categoria: "stake_economia",
     seletor: ".comunicado-titulo a",
     tipo_conteudo: "comunicado"
   },
   portugalglobal: {
     url: "https://portugalglobal.pt/noticias/",
     nome: "Portugal Global",
-    categoria: "economia_financas",
+    categoria: "stake_economia",
     seletor: ".news-item h3 a",
     tipo_conteudo: "noticia"
   },
   consumidor: {
     url: "https://www.consumidor.gov.pt/comunicacao1/noticias1?page=1",
     nome: "Portal Consumidor",
-    categoria: "economia_financas",
+    categoria: "stake_economia",
     seletor: ".noticia-titulo a",
     tipo_conteudo: "noticia"
   },
   dgae: {
     url: "https://www.dgae.gov.pt/comunicacao/noticias.aspx",
     nome: "DGAE",
-    categoria: "economia_financas",
+    categoria: "stake_economia",
     seletor: ".news-title a",
     tipo_conteudo: "noticia"
   },
@@ -181,21 +181,21 @@ const STAKEHOLDERS_CONFIG = {
   infarmed: {
     url: "https://www.infarmed.pt/web/infarmed/noticias",
     nome: "INFARMED",
-    categoria: "saude",
+    categoria: "stake_saude",
     seletor: ".news-item h3 a",
     tipo_conteudo: "noticia"
   },
   ers: {
     url: "https://www.ers.pt/pt/comunicacao/noticias/",
     nome: "ERS",
-    categoria: "saude",
+    categoria: "stake_saude",
     seletor: ".noticia-titulo a",
     tipo_conteudo: "noticia"
   },
   igas: {
     url: "https://www.igas.min-saude.pt/category/noticias-e-eventos/noticias/",
     nome: "IGAS",
-    categoria: "saude",
+    categoria: "stake_saude",
     seletor: ".entry-title a",
     tipo_conteudo: "noticia"
   },
@@ -204,21 +204,21 @@ const STAKEHOLDERS_CONFIG = {
   cmvm: {
     url: "https://www.cmvm.pt/PInstitucional/Content?Input=E9639BDA21F5F3D13613E5F7C187F1A785B6EE9D48F21D9B121B7E5EC2D6A6F5",
     nome: "CMVM",
-    categoria: "imobiliario_habitacao",
+    categoria: "stake_habitacao",
     seletor: ".comunicado a",
     tipo_conteudo: "comunicado"
   },
   dgterritorio: {
     url: "https://www.dgterritorio.gov.pt/todas-noticias",
     nome: "DGTerrit√≥rio",
-    categoria: "imobiliario_habitacao",
+    categoria: "stake_habitacao",
     seletor: ".news-title a",
     tipo_conteudo: "noticia"
   },
   ihru: {
     url: "https://www.ihru.pt/noticias",
     nome: "IHRU",
-    categoria: "imobiliario_habitacao",
+    categoria: "stake_habitacao",
     seletor: ".noticia-item a",
     tipo_conteudo: "noticia"
   }
diff --git a/src/server.js b/src/server.js
index 6c6b400..66a1f52 100644
--- a/src/server.js
+++ b/src/server.js
@@ -5,7 +5,8 @@ import { testConnection } from './config/supabase.js';
 import { iniciarAgendamento } from './services/scheduler.js';
 import documentRoutes from './routes/documentRoutes.js';
 import userRoutes from './routes/userRoutes.js';
-import authRoutes from './routes/authRoutes.js'; // ‚Üê NOVO
+import authRoutes from './routes/authRoutes.js';
+import stakeholderRoutes from './routes/stakeholderRoutes.js'; // ‚Üê NOVO
 
 const app = express();
 const PORT = process.env.PORT || 3000;
@@ -25,7 +26,8 @@ app.use(express.json());
 // Rotas
 app.use('/api/documents', documentRoutes);
 app.use('/api/users', userRoutes);
-app.use('/api/auth', authRoutes); // ‚Üê NOVO
+app.use('/api/auth', authRoutes);
+app.use('/api/stakeholders', stakeholderRoutes); // ‚Üê NOVO
 
 // Rota de teste
 app.get('/api/health', (req, res) => {
